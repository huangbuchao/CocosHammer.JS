{"version":3,"sources":["Test.js"],"names":["cc","Class","extends","Component","properties","onLoad","updateLabelTextBind","updateLabelText","bind","initHammer","labelComp","node","children","getComponent","Label","console","log","Hammer","mc","Manager","add","Swipe","direction","DIRECTION_ALL","on","e","text","type","string"],"mappings":";;;;;;AAAA;;;;;;AAEAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY,EAHL;;AAKPC,QALO,oBAKE;AACP,SAAKC,mBAAL,GAA2B,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAA3B;AACA,SAAKC,UAAL;AACA,SAAKC,SAAL,GAAiB,KAAKC,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsBC,YAAtB,CAAmCb,GAAGc,KAAtC,CAAjB;AACD,GATM;AAWPL,YAXO,wBAWM;AACXM,YAAQC,GAAR,CAAYC,qBAAZ;AACA,QAAIC,KAAK,IAAID,sBAAOE,OAAX,CAAmB,KAAKR,IAAxB,CAAT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAO,OAAGE,GAAH,CAAO,IAAIH,sBAAOI,KAAX,CAAiB,EAAEC,WAAWL,sBAAOM,aAApB,EAAjB,CAAP;AACA;;AAEA;AACA;AACA;AACA;;AAEAL,OAAGM,EAAH,CACE,8GADF,EAEE,KAAKjB,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAFF;AAID,GAjCM;AAmCPD,iBAnCO,2BAmCSkB,CAnCT,EAmCY;AACjB,QAAIC,OAAOD,EAAEE,IAAF,GAAS,oBAApB;AACA,SAAKjB,SAAL,CAAekB,MAAf,GAAwBF,IAAxB;AACD;AAtCM,CAAT","file":"Test.js","sourceRoot":"../../../../assets/Script","sourcesContent":["import Hammer from \"./cocosHammer\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {},\n\n  onLoad() {\n    this.updateLabelTextBind = this.updateLabelText.bind(this);\n    this.initHammer();\n    this.labelComp = this.node.children[0].getComponent(cc.Label);\n  },\n\n  initHammer() {\n    console.log(Hammer);\n    var mc = new Hammer.Manager(this.node);\n\n    // mc.add(\n    //     new Hammer.Pan({ direction: Hammer.DIRECTION_ALL, threshold: 0 })\n    // );\n    // mc.add(new Hammer.Tap({ event: 'singleTap' }));\n    // mc.add(new Hammer.Tap({ event: 'doubleTap', taps: 2 }));\n    // mc.add(new Hammer.Tap({ event: 'quadrupletap', taps: 4 }));\n    mc.add(new Hammer.Swipe({ direction: Hammer.DIRECTION_ALL }));\n    //mc.add(new Hammer.Press());\n\n    //mc.get('pan').recognizeWith('swipe');\n    // mc.get('doubleTap').recognizeWith('singleTap');\n    // mc.get('quadrupletap').recognizeWith('singleTap');\n    //mc.get('singleTap').requireFailure('doubleTap');\n\n    mc.on(\n      \"panleft panright panup pandown singleTap doubleTap quadrupletap swipeleft swiperight swipeup swipedown press\",\n      this.updateLabelText.bind(this)\n    );\n  },\n\n  updateLabelText(e) {\n    let text = e.type + \" gesture detected.\";\n    this.labelComp.string = text;\n  }\n});\n"]}